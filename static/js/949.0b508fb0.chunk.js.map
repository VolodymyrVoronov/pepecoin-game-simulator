{"version":3,"file":"static/js/949.0b508fb0.chunk.js","mappings":"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","sources":["components/PriceChart/PriceChart.styled.ts","components/PriceChart/PriceChart.tsx","assets/pc-icon-01.svg","assets/pause-icon-01.svg","components/Account/Account.styled.ts","components/Account/Account.tsx","components/GraphicCard/GraphicCard.styled.ts","components/GraphicCard/GraphicCard.tsx","components/GraphicCards/GraphicCards.styled.ts","components/GraphicCards/GraphicCards.tsx","pages/Game/Game.styled.ts","pages/Game/Game.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst PriceChartContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  width: 49.5%;\r\n\r\n  padding: 15px;\r\n\r\n  background-color: #ffffff;\r\n\r\n  border-radius: 25px;\r\n`;\r\n\r\nconst PriceChartTitle = styled.p`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nexport { PriceChartContainer, PriceChartTitle };\r\n","import { FC } from \"react\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport { gameStore } from \"store/game\";\r\n\r\nimport { PriceChartContainer, PriceChartTitle } from \"./PriceChart.styled\";\r\n\r\nconst options = {\r\n  responsive: true,\r\n  plugins: {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    title: {\r\n      display: false,\r\n    },\r\n  },\r\n};\r\n\r\nconst PriceChart: FC<{}> = (): JSX.Element => {\r\n  const { prices, currentPrice, timeInterval } = gameStore();\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n  );\r\n\r\n  const labels = timeInterval;\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Price\",\r\n        data: prices,\r\n        borderColor: \"rgb(255, 99, 132)\",\r\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <PriceChartContainer>\r\n      <PriceChartTitle>Pepecoin price: {currentPrice}</PriceChartTitle>\r\n      <Line options={options} data={data} />\r\n    </PriceChartContainer>\r\n  );\r\n};\r\n\r\nexport default PriceChart;\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPcIcon01(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1_1_\",\n    style: {\n      enableBackground: \"new 0 0 16 16\"\n    },\n    viewBox: \"0 0 16 16\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14,0H2C0.895,0,0,0.895,0,2v9c0,1.105,0.895,2,2,2h3v2H3v1h10v-1h-2v-2h3c1.105,0,2-0.895,2-2V2C16,0.895,15.105,0,14,0z   M10,15H6v-2h4V15z M15,10H1V2c0-0.552,0.449-1,1-1h12c0.551,0,1,0.448,1,1V10z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPcIcon01);\nexport default __webpack_public_path__ + \"static/media/pc-icon-01.76851112bcceea8c0d0661c90f810f25.svg\";\nexport { ForwardRef as ReactComponent };","var _circle, _line, _line2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPauseIcon01(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 12,\n    cy: 12,\n    fill: \"none\",\n    r: 10,\n    stroke: \"#000\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2\n  })), _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    x1: 10,\n    x2: 10,\n    y1: 15,\n    y2: 9\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    fill: \"none\",\n    stroke: \"#000\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    x1: 14,\n    x2: 14,\n    y1: 15,\n    y2: 9\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPauseIcon01);\nexport default __webpack_public_path__ + \"static/media/pause-icon-01.8be4b37e98a78b5f105a0e44d12eb2b8.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from \"styled-components\";\r\n\r\nimport pcIcon01 from \"assets/pc-icon-01.svg\";\r\nimport pauseIcon01 from \"assets/pause-icon-01.svg\";\r\nimport miningAnimation01 from \"assets/mining-animation-01.gif\";\r\n\r\nconst AccountContainer = styled.div`\r\n  display: flex;\r\n\r\n  width: 49.5%;\r\n\r\n  padding: 15px;\r\n\r\n  background-color: #ffffff;\r\n\r\n  border-radius: 25px;\r\n`;\r\n\r\nconst AccountLeftSide = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n\r\n  width: 50%;\r\n`;\r\n\r\nconst AccountLeftSidePc = styled.div`\r\n  display: flex;\r\n\r\n  width: 100%;\r\n\r\n  background-image: url(${pcIcon01});\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst AccountLeftSideAnimation = styled.div`\r\n  position: absolute;\r\n\r\n  display: block;\r\n\r\n  height: 65%;\r\n  width: 99%;\r\n\r\n  background-image: url(${miningAnimation01});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  border-top-left-radius: 50px;\r\n  border-top-right-radius: 50px;\r\n\r\n  border: 20px solid #000000;\r\n`;\r\n\r\nconst blinkAnimation = keyframes`\r\n  50% {\r\n    opacity: 0.0;\r\n  }\r\n`;\r\n\r\nconst AccountLeftSidePauseIcon = styled.div`\r\n  position: absolute;\r\n\r\n  display: block;\r\n\r\n  top: 35%;\r\n  left: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n\r\n  height: 100px;\r\n  width: 100px;\r\n\r\n  background-image: url(${pauseIcon01});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n\r\n  animation: ${blinkAnimation} 2s ease-in-out 0s infinite;\r\n`;\r\n\r\nconst AccountRightSide = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  width: 50%;\r\n`;\r\n\r\ninterface IAccountTextProps {\r\n  fontSize?: string;\r\n}\r\n\r\nconst AccountText = styled.span<IAccountTextProps>`\r\n  display: flex;\r\n\r\n  margin-top: 20px;\r\n\r\n  font-size: ${(props) => (props.fontSize ? props.fontSize : \"48px\")};\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nconst AccountButton = styled.button`\r\n  display: block;\r\n\r\n  margin-top: 25px;\r\n  padding: 10px 20px;\r\n\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n\r\n  background-color: #000000;\r\n\r\n  border-radius: 25px;\r\n  border: none;\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 750ms ease;\r\n\r\n  &:hover {\r\n    border: none;\r\n\r\n    box-shadow: 0px 0px 0px 10px rgba(0, 0, 0, 0.5);\r\n\r\n    transition: 250ms ease;\r\n  }\r\n`;\r\n\r\nconst AccountDivider = styled.div`\r\n  display: flex;\r\n\r\n  width: 50%;\r\n  height: 2px;\r\n\r\n  margin-top: 25px;\r\n\r\n  background: #000000;\r\n`;\r\n\r\nexport {\r\n  AccountContainer,\r\n  AccountLeftSide,\r\n  AccountLeftSidePc,\r\n  AccountLeftSideAnimation,\r\n  AccountLeftSidePauseIcon,\r\n  AccountRightSide,\r\n  AccountText,\r\n  AccountButton,\r\n  AccountDivider,\r\n};\r\n","import { FC, Fragment, useEffect } from \"react\";\r\n\r\nimport { gameStore } from \"store/game\";\r\n\r\nimport {\r\n  AccountContainer,\r\n  AccountLeftSide,\r\n  AccountLeftSidePc,\r\n  AccountLeftSideAnimation,\r\n  AccountLeftSidePauseIcon,\r\n  AccountRightSide,\r\n  AccountText,\r\n  AccountButton,\r\n  AccountDivider,\r\n} from \"./Account.styled\";\r\n\r\nconst Account: FC<{}> = (): JSX.Element => {\r\n  const { toggleMining, isMiningStarted, deposit, mining, currentGraphicCard } =\r\n    gameStore();\r\n\r\n  useEffect(() => {\r\n    const miningInterval = setInterval(() => {\r\n      if (isMiningStarted) {\r\n        mining();\r\n      }\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(miningInterval);\r\n    };\r\n  }, [isMiningStarted, mining]);\r\n\r\n  const onMiningButtonClick = () => {\r\n    toggleMining();\r\n  };\r\n\r\n  return (\r\n    <AccountContainer>\r\n      <AccountLeftSide>\r\n        <AccountLeftSidePc />\r\n        {isMiningStarted ? (\r\n          <AccountLeftSideAnimation />\r\n        ) : (\r\n          <AccountLeftSidePauseIcon />\r\n        )}\r\n      </AccountLeftSide>\r\n\r\n      <AccountRightSide>\r\n        <AccountText>Счёт:</AccountText>\r\n        <AccountText fontSize=\"28px\">{deposit.toFixed(2)}</AccountText>\r\n        <AccountText fontSize=\"26px\">Pepecoin</AccountText>\r\n        <AccountDivider />\r\n        <AccountText fontSize=\"36px\">Видеокарта:</AccountText>\r\n\r\n        {currentGraphicCard ? (\r\n          <Fragment>\r\n            <AccountText fontSize=\"26px\">\r\n              {currentGraphicCard?.name}\r\n            </AccountText>\r\n            <AccountButton onClick={onMiningButtonClick} type=\"button\">\r\n              {isMiningStarted ? \"Остановить майнинг\" : \"Начать майнинг\"}\r\n            </AccountButton>\r\n          </Fragment>\r\n        ) : (\r\n          <AccountText fontSize=\"18px\">\r\n            Для начала майнинга надо купить видеокарту.\r\n          </AccountText>\r\n        )}\r\n      </AccountRightSide>\r\n    </AccountContainer>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nconst GraphicCardContainer = styled.article`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst GraphicCardTitle = styled.h3`\r\n  font-size: 32px;\r\n  text-align: center;\r\n`;\r\n\r\ninterface IGraphicCardPhotoProps {\r\n  bgImage: string;\r\n}\r\n\r\nconst GraphicCardPhoto = styled.div<IGraphicCardPhotoProps>`\r\n  height: 200px;\r\n  width: 200px;\r\n\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n`;\r\n\r\nconst GraphicCardPrice = styled.span`\r\n  font-size: 26px;\r\n  text-align: center;\r\n`;\r\n\r\ninterface IGraphicCardButtonProps {\r\n  canAfford: boolean;\r\n  isMiningStarted: boolean;\r\n}\r\n\r\nconst GraphicCardButton = styled.button<IGraphicCardButtonProps>`\r\n  display: block;\r\n\r\n  margin-top: 25px;\r\n  padding: 10px 50px;\r\n\r\n  font-size: 24px;\r\n  font-weight: 400;\r\n  color: #ffffff;\r\n\r\n  background-color: ${(props) => (props.canAfford ? \"green\" : \"tomato\")};\r\n\r\n  border-radius: 25px;\r\n  border: none;\r\n\r\n  cursor: pointer;\r\n\r\n  transition: 750ms ease;\r\n\r\n  ${(props) =>\r\n    props.canAfford &&\r\n    !props.isMiningStarted &&\r\n    css`\r\n      &:hover {\r\n        box-shadow: 0px 0px 0px 10px #02c102;\r\n\r\n        transition: 250ms ease;\r\n      }\r\n    `}\r\n\r\n  &:disabled {\r\n    opacity: ${(props) =>\r\n      props.canAfford && !props.isMiningStarted ? \"1\" : \"0.5\"};\r\n    cursor: ${(props) =>\r\n      props.canAfford && !props.isMiningStarted ? \"pointer\" : \"not-allowed\"};\r\n  }\r\n`;\r\n\r\nconst GraphicCardText = styled.span`\r\n  margin-top: 25px;\r\n\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n`;\r\n\r\nexport {\r\n  GraphicCardContainer,\r\n  GraphicCardTitle,\r\n  GraphicCardPhoto,\r\n  GraphicCardPrice,\r\n  GraphicCardButton,\r\n  GraphicCardText,\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { gameStore } from \"store/game\";\r\n\r\nimport {\r\n  GraphicCardContainer,\r\n  GraphicCardTitle,\r\n  GraphicCardPhoto,\r\n  GraphicCardPrice,\r\n  GraphicCardButton,\r\n  GraphicCardText,\r\n} from \"./GraphicCard.styled\";\r\n\r\ninterface IGraphicCardProps {\r\n  id: string;\r\n  name: string;\r\n  price: number;\r\n  photo: string;\r\n  canBuy: boolean;\r\n  purchased: boolean;\r\n}\r\n\r\nconst GraphicCard: FC<IGraphicCardProps> = ({\r\n  id,\r\n  name,\r\n  price,\r\n  photo,\r\n  canBuy,\r\n  purchased,\r\n}): JSX.Element => {\r\n  const { buyGraphicCard, isMiningStarted } = gameStore();\r\n\r\n  const onBuyButtonClick = (): void => {\r\n    buyGraphicCard(id);\r\n  };\r\n\r\n  return (\r\n    <GraphicCardContainer>\r\n      <GraphicCardTitle>{name}</GraphicCardTitle>\r\n      <GraphicCardPhoto\r\n        bgImage={photo}\r\n        style={{ opacity: `${purchased ? 0.5 : 1}` }}\r\n      />\r\n      <GraphicCardPrice>{price} Pepecoin</GraphicCardPrice>\r\n\r\n      {purchased ? (\r\n        <GraphicCardText>Карта куплена ✅</GraphicCardText>\r\n      ) : (\r\n        <GraphicCardButton\r\n          onClick={onBuyButtonClick}\r\n          type=\"button\"\r\n          canAfford={canBuy}\r\n          isMiningStarted={isMiningStarted}\r\n          disabled={!canBuy || isMiningStarted}\r\n        >\r\n          Купить\r\n        </GraphicCardButton>\r\n      )}\r\n    </GraphicCardContainer>\r\n  );\r\n};\r\n\r\nexport default GraphicCard;\r\n","import styled from \"styled-components\";\r\n\r\nconst GraphicCardsContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  width: 100%;\r\n\r\n  padding: 25px;\r\n\r\n  background-color: #ffffff;\r\n\r\n  border-radius: 25px;\r\n`;\r\n\r\nexport { GraphicCardsContainer };\r\n","import { FC } from \"react\";\r\n\r\nimport { gameStore } from \"store/game\";\r\n\r\nimport GraphicCard from \"components/GraphicCard/GraphicCard\";\r\n\r\nimport { GraphicCardsContainer } from \"./GraphicCards.styled\";\r\n\r\nconst GraphicCards: FC<{}> = (): JSX.Element => {\r\n  const { graphicCards, deposit } = gameStore();\r\n\r\n  return (\r\n    <GraphicCardsContainer>\r\n      {graphicCards.map((graphicCard) => {\r\n        const { id, name, price, photo, purchased } = graphicCard;\r\n\r\n        const canBuy = price <= deposit;\r\n\r\n        return (\r\n          <GraphicCard\r\n            key={id}\r\n            id={id}\r\n            name={name}\r\n            price={price}\r\n            photo={photo}\r\n            canBuy={canBuy}\r\n            purchased={purchased}\r\n          />\r\n        );\r\n      })}\r\n    </GraphicCardsContainer>\r\n  );\r\n};\r\n\r\nexport default GraphicCards;\r\n","import styled from \"styled-components\";\r\n\r\nimport gamePageBg01 from \"assets/global-bg-01.jpg\";\r\n\r\nconst GameContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  min-width: 1440px;\r\n  height: 100%;\r\n\r\n  padding: 10px;\r\n\r\n  background: linear-gradient(rgba(0, 0, 0, 0.5) 100%, rgba(0, 0, 0, 0.5) 100%),\r\n    url(${gamePageBg01});\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n`;\r\n\r\nconst GameTopBox = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst GameBottomBox = styled.div`\r\n  display: flex;\r\n\r\n  margin-top: 25px;\r\n`;\r\n\r\nexport { GameContainer, GameTopBox, GameBottomBox };\r\n","import { FC, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { gameStore } from \"store/game\";\r\n\r\nimport Paths from \"const/paths\";\r\n\r\nimport PriceChart from \"components/PriceChart/PriceChart\";\r\nimport Account from \"components/Account/Account\";\r\nimport GraphicCards from \"components/GraphicCards/GraphicCards\";\r\n\r\nimport { GameContainer, GameTopBox, GameBottomBox } from \"./Game.styled\";\r\n\r\nconst Game: FC<{}> = (): JSX.Element => {\r\n  const navigation = useNavigate();\r\n\r\n  const {\r\n    isGameStarted,\r\n    setRandomPrices,\r\n    updateMinMaxRangePrices,\r\n    cutTheChartPrices,\r\n  } = gameStore();\r\n\r\n  useEffect(() => {\r\n    if (!isGameStarted) {\r\n      navigation(Paths.StartPage, { replace: true });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const priceUpdateInterval = setInterval(() => {\r\n      if (isGameStarted) {\r\n        setRandomPrices();\r\n        cutTheChartPrices();\r\n      }\r\n    }, 1000 * 10);\r\n\r\n    return () => {\r\n      clearInterval(priceUpdateInterval);\r\n    };\r\n  }, [cutTheChartPrices, isGameStarted, setRandomPrices]);\r\n\r\n  useEffect(() => {\r\n    const rangePriceUpdateInterval = setInterval(() => {\r\n      if (isGameStarted) {\r\n        updateMinMaxRangePrices();\r\n      }\r\n    }, 1000 * 30);\r\n\r\n    return () => {\r\n      clearInterval(rangePriceUpdateInterval);\r\n    };\r\n  }, [isGameStarted, updateMinMaxRangePrices]);\r\n\r\n  return (\r\n    <GameContainer>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ ease: \"linear\", duration: 1 }}\r\n      >\r\n        <GameTopBox>\r\n          <PriceChart />\r\n          <Account />\r\n        </GameTopBox>\r\n      </motion.div>\r\n\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ ease: \"linear\", duration: 1, delay: 1 }}\r\n      >\r\n        <GameBottomBox>\r\n          <GraphicCards />\r\n        </GameBottomBox>\r\n      </motion.div>\r\n    </GameContainer>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n"],"names":["PriceChartContainer","styled","PriceChartTitle","options","responsive","plugins","legend","display","title","gameStore","prices","currentPrice","timeInterval","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","data","labels","datasets","label","borderColor","backgroundColor","AccountContainer","AccountLeftSide","AccountLeftSidePc","pcIcon01","AccountLeftSideAnimation","miningAnimation01","blinkAnimation","keyframes","AccountLeftSidePauseIcon","pauseIcon01","AccountRightSide","AccountText","props","fontSize","AccountButton","AccountDivider","toggleMining","isMiningStarted","deposit","mining","currentGraphicCard","useEffect","miningInterval","setInterval","clearInterval","toFixed","Fragment","name","onClick","type","GraphicCardContainer","GraphicCardTitle","GraphicCardPhoto","bgImage","GraphicCardPrice","GraphicCardButton","canAfford","css","GraphicCardText","id","price","photo","canBuy","purchased","buyGraphicCard","style","opacity","disabled","GraphicCardsContainer","graphicCards","map","graphicCard","GameContainer","gamePageBg01","GameTopBox","GameBottomBox","navigation","useNavigate","isGameStarted","setRandomPrices","updateMinMaxRangePrices","cutTheChartPrices","Paths","replace","priceUpdateInterval","rangePriceUpdateInterval","motion","initial","animate","transition","ease","duration","delay"],"sourceRoot":""}